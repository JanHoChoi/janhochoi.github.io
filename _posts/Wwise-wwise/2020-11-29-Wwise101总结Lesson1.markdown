---
layout: post
title: Wwise101学习总结 - Lesson 1
date:  2020-11-29 22:45:00 +0800
description: Wwise101学习总结
img: wwise_logo.jpg # Add image post (optional)
tags: [Wwise]
author: # Add name author (optional)
wwise: true
---

{{site.label1}} <a href="https://github.com/janhochoi/" target="\_blank">JanHoChoi</a> {{site.label2}}

# Wwise101学习总结 - Lesson 1

## 主要内容

简单的介绍了一下Wwise的使用过程。让读者完成了一系列步骤，最终在游戏里面发声。

## 知识点

### Layouts

工具栏的Layouts选项框可以切换不同的布局。不同布局有不同的视图，完成不同的功能。

- Designer（F5）

  左侧是Project Explorer。给我的感觉是列举了当前Wwise工程的所有建好的资源，像Unity的Hierarchy窗口。包括了导入好的Audio，定义好的Events，生成的SoundBanks等等；

- Profiler（F6）

  Capture Log视图显示游戏中生成的信息（比如Event等）。需要先把Wwise和游戏连接起来。顶部时间栏右边第一个按钮用于连接Wwise和游戏；

- SoundBank（F7）

  用于发布对应的Event，有点像配置完成后生成一个二进制文件的感觉；

- 其他

### Views

一些小的Editor，类似Unity编辑器的tab。如果有对应功能的窗口找不到的话，可以在Views中找。优点是，按字母升序排序，比较好定位。

可以把Views的窗口拖到Layouts中，相当于调整布局，这种设置也会保存下来。比如Profiler（F6） Layout下觉得功能不够用，可以拖一些Views窗口进Layout中常驻。

### Events

Events是游戏与Wwise互动的方式 。

游戏通过一次次game calls（游戏调用）向Wwise发送消息，然后触发Wwise中相关的功能。

每次game call中，游戏通过Events告诉Wwise，从而触发声音或修改声音属性或停止播放声音。

Capture Log中可以看到有一列Game Object列，表明这个消息是由游戏中哪个实体关联。比如多个角色同时调用了开枪的事件，要让Wwise知道具体哪个角色开了枪，才能正确发声。

![image-20211013152301872](../../assets/img/image-20211013152301872.png)

> Event的命名很重要。Event名字与游戏调用game call中的名字完全符合才可以触发相应的事件。对象的命名是不区分大小写的，自动会转换成小写去处理。

### Work Unit

![image-20211012164301159](../../assets/img/image-20211012164301159.png)

工作单元，可以让工程分解成多个部分，由不同的设计师分别设计。

为了加快工程加载时间，降低内存占用，提升整体性能。如果工程很大，那么可以通过卸载一个或多个工作单元来大幅提高性能。

本质是Wwise工程中的XML文件。

Work Unit是Events的组织方式。

点开Designer布局左侧Project Explorer的Events选项页，会看到一些Work Unit。每个Work Unit可以装入各个人设计的事件，到了开发后期，再把Work Unit整合。右键某个Work Unit可以创建Events。

### 导入声音

在Designer布局左侧Project Explorer的Audio选项卡中，选择一个WorkUnit进行对象创建。

![创建Sound SFX](../../assets/img/image-20201129234417556.png)

Sound SFX对象主要用于播音效；Sound Voice对象主要用于播语音对白。SoundSFX等价于DAW中的一个轨道。

创建后，对象名字红色表示没有音频文件关联，其他颜色正常。右键可以Import Audio Files（Shift+I）。导入的时候，**直接导最高质量的声音，在后期再一次性通过Wwise优化文件的体积**。

### Actions

选中Event后，在Event Editor中右键或者Add按钮，可以创建一系列的Action比如Play（播放）Action。创建好后，把Audio对象拖到Target中，即可。

![image-20211013152622106](../../assets/img/image-20211013152622106.png)

如上图所示，当收到fire_shotgun_player的Event后，会Play对应Audio的声音资源。

### 发布

操作了Event后，还需要把Event添加到SoundBank中去。

F7切换到SoundBank的布局，创建一个SoundBank并命名。

![image-20211013153747480](../../assets/img/image-20211013153747480.png)

通过拖拽可以把Event绑定在SoundBank中。

![image-20211013153841457](../../assets/img/image-20211013153841457.png)

选中Platforms和Languages，生成对应的bnk。

在游戏的代码中，需要通过路径+命名找到SoundBank资源并加载，才能正常发送game call。